/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.chilkatsoft;

public class CkBinData {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected CkBinData(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CkBinData obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        chilkatJNI.delete_CkBinData(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CkBinData() {
    this(chilkatJNI.new_CkBinData(), true);
  }

  public boolean get_LastMethodSuccess() {
    return chilkatJNI.CkBinData_get_LastMethodSuccess(swigCPtr, this);
  }

  public void put_LastMethodSuccess(boolean newVal) {
    chilkatJNI.CkBinData_put_LastMethodSuccess(swigCPtr, this, newVal);
  }

  public int get_NumBytes() {
    return chilkatJNI.CkBinData_get_NumBytes(swigCPtr, this);
  }

  public boolean AppendBd(CkBinData binData) {
    return chilkatJNI.CkBinData_AppendBd(swigCPtr, this, CkBinData.getCPtr(binData), binData);
  }

  public boolean AppendBinary(CkByteData data) {
    return chilkatJNI.CkBinData_AppendBinary(swigCPtr, this, CkByteData.getCPtr(data), data);
  }

  public boolean AppendBom(String charset) {
    return chilkatJNI.CkBinData_AppendBom(swigCPtr, this, charset);
  }

  public boolean AppendByte(int byteValue) {
    return chilkatJNI.CkBinData_AppendByte(swigCPtr, this, byteValue);
  }

  public boolean AppendCountedString(int numCountBytes, boolean bigEndian, String str, String charset) {
    return chilkatJNI.CkBinData_AppendCountedString(swigCPtr, this, numCountBytes, bigEndian, str, charset);
  }

  public boolean AppendEncoded(String encData, String encoding) {
    return chilkatJNI.CkBinData_AppendEncoded(swigCPtr, this, encData, encoding);
  }

  public boolean AppendEncodedSb(CkStringBuilder sb, String encoding) {
    return chilkatJNI.CkBinData_AppendEncodedSb(swigCPtr, this, CkStringBuilder.getCPtr(sb), sb, encoding);
  }

  public boolean AppendInt2(int value, boolean littleEndian) {
    return chilkatJNI.CkBinData_AppendInt2(swigCPtr, this, value, littleEndian);
  }

  public boolean AppendInt4(int value, boolean littleEndian) {
    return chilkatJNI.CkBinData_AppendInt4(swigCPtr, this, value, littleEndian);
  }

  public boolean AppendPadded(String str, String charset, boolean padWithSpace, int fieldLen) {
    return chilkatJNI.CkBinData_AppendPadded(swigCPtr, this, str, charset, padWithSpace, fieldLen);
  }

  public boolean AppendSb(CkStringBuilder sb, String charset) {
    return chilkatJNI.CkBinData_AppendSb(swigCPtr, this, CkStringBuilder.getCPtr(sb), sb, charset);
  }

  public boolean AppendString(String str, String charset) {
    return chilkatJNI.CkBinData_AppendString(swigCPtr, this, str, charset);
  }

  public boolean Clear() {
    return chilkatJNI.CkBinData_Clear(swigCPtr, this);
  }

  public boolean ContentsEqual(CkBinData binData) {
    return chilkatJNI.CkBinData_ContentsEqual(swigCPtr, this, CkBinData.getCPtr(binData), binData);
  }

  public int FindString(String str, int startIdx, String charset) {
    return chilkatJNI.CkBinData_FindString(swigCPtr, this, str, startIdx, charset);
  }

  public boolean GetBinary(CkByteData outBytes) {
    return chilkatJNI.CkBinData_GetBinary(swigCPtr, this, CkByteData.getCPtr(outBytes), outBytes);
  }

  public boolean GetBinaryChunk(int offset, int numBytes, CkByteData outBytes) {
    return chilkatJNI.CkBinData_GetBinaryChunk(swigCPtr, this, offset, numBytes, CkByteData.getCPtr(outBytes), outBytes);
  }

  public int GetByte(int index) {
    return chilkatJNI.CkBinData_GetByte(swigCPtr, this, index);
  }

  public SWIGTYPE_p_void GetBytesPtr() {
    long cPtr = chilkatJNI.CkBinData_GetBytesPtr(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public boolean GetEncoded(String encoding, CkString outStr) {
    return chilkatJNI.CkBinData_GetEncoded(swigCPtr, this, encoding, CkString.getCPtr(outStr), outStr);
  }

  public String getEncoded(String encoding) {
    return chilkatJNI.CkBinData_getEncoded(swigCPtr, this, encoding);
  }

  public String encoded(String encoding) {
    return chilkatJNI.CkBinData_encoded(swigCPtr, this, encoding);
  }

  public boolean GetEncodedChunk(int offset, int numBytes, String encoding, CkString outStr) {
    return chilkatJNI.CkBinData_GetEncodedChunk(swigCPtr, this, offset, numBytes, encoding, CkString.getCPtr(outStr), outStr);
  }

  public String getEncodedChunk(int offset, int numBytes, String encoding) {
    return chilkatJNI.CkBinData_getEncodedChunk(swigCPtr, this, offset, numBytes, encoding);
  }

  public String encodedChunk(int offset, int numBytes, String encoding) {
    return chilkatJNI.CkBinData_encodedChunk(swigCPtr, this, offset, numBytes, encoding);
  }

  public boolean GetEncodedSb(String encoding, CkStringBuilder sb) {
    return chilkatJNI.CkBinData_GetEncodedSb(swigCPtr, this, encoding, CkStringBuilder.getCPtr(sb), sb);
  }

  public boolean GetHash(String algorithm, String encoding, CkString outStr) {
    return chilkatJNI.CkBinData_GetHash(swigCPtr, this, algorithm, encoding, CkString.getCPtr(outStr), outStr);
  }

  public String getHash(String algorithm, String encoding) {
    return chilkatJNI.CkBinData_getHash(swigCPtr, this, algorithm, encoding);
  }

  public String hash(String algorithm, String encoding) {
    return chilkatJNI.CkBinData_hash(swigCPtr, this, algorithm, encoding);
  }

  public int GetInt2(int index, boolean littleEndian) {
    return chilkatJNI.CkBinData_GetInt2(swigCPtr, this, index, littleEndian);
  }

  public int GetInt4(int index, boolean littleEndian) {
    return chilkatJNI.CkBinData_GetInt4(swigCPtr, this, index, littleEndian);
  }

  public boolean GetString(String charset, CkString outStr) {
    return chilkatJNI.CkBinData_GetString(swigCPtr, this, charset, CkString.getCPtr(outStr), outStr);
  }

  public String getString(String charset) {
    return chilkatJNI.CkBinData_getString(swigCPtr, this, charset);
  }

  public String string(String charset) {
    return chilkatJNI.CkBinData_string(swigCPtr, this, charset);
  }

  public boolean GetTextChunk(int startIdx, int numBytes, String charset, CkString outStr) {
    return chilkatJNI.CkBinData_GetTextChunk(swigCPtr, this, startIdx, numBytes, charset, CkString.getCPtr(outStr), outStr);
  }

  public String getTextChunk(int startIdx, int numBytes, String charset) {
    return chilkatJNI.CkBinData_getTextChunk(swigCPtr, this, startIdx, numBytes, charset);
  }

  public String textChunk(int startIdx, int numBytes, String charset) {
    return chilkatJNI.CkBinData_textChunk(swigCPtr, this, startIdx, numBytes, charset);
  }

  public long GetUInt2(int index, boolean littleEndian) {
    return chilkatJNI.CkBinData_GetUInt2(swigCPtr, this, index, littleEndian);
  }

  public long GetUInt4(int index, boolean littleEndian) {
    return chilkatJNI.CkBinData_GetUInt4(swigCPtr, this, index, littleEndian);
  }

  public boolean LoadBinary(CkByteData data) {
    return chilkatJNI.CkBinData_LoadBinary(swigCPtr, this, CkByteData.getCPtr(data), data);
  }

  public boolean LoadEncoded(String encData, String encoding) {
    return chilkatJNI.CkBinData_LoadEncoded(swigCPtr, this, encData, encoding);
  }

  public boolean LoadFile(String path) {
    return chilkatJNI.CkBinData_LoadFile(swigCPtr, this, path);
  }

  public void RemoveByteVal(int value) {
    chilkatJNI.CkBinData_RemoveByteVal(swigCPtr, this, value);
  }

  public boolean RemoveChunk(int offset, int numBytes) {
    return chilkatJNI.CkBinData_RemoveChunk(swigCPtr, this, offset, numBytes);
  }

  public boolean SecureClear() {
    return chilkatJNI.CkBinData_SecureClear(swigCPtr, this);
  }

  public boolean WriteAppendFile(String path) {
    return chilkatJNI.CkBinData_WriteAppendFile(swigCPtr, this, path);
  }

  public boolean WriteFile(String path) {
    return chilkatJNI.CkBinData_WriteFile(swigCPtr, this, path);
  }

}
